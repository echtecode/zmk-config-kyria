/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E  &kp R           &kp T                                                               &kp Y      &kp U                   &kp I      &kp O    &kp P          &kp DELETE
&kp TAB    &kp A  &kp S  &kp D  &kp F           &kp G                                                               &kp H      &kp J                   &kp K      &kp L    &kp BACKSPACE  &kp LA(NUMBER_1)
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V           &kp B      &mo 2  &trans             &trans             &kp LC(A)   &kp N      &kp M                   &kp COMMA  &kp DOT  &kp LCMD       &trans
                         &mo 3  &kp LEFT_SHIFT  &kp LCTRL  &mo 1  &kp LC(LA(LS(C)))  &kp LC(LA(LS(K)))  &kp RETURN  &kp SPACE  &kp LA(LC(LEFT_SHIFT))  &trans
            >;
        };

        code {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR            &kp PERCENT        &kp CARET                                                &kp AMPERSAND      &kp MINUS        &kp UNDERSCORE         &kp ASTERISK      &kp PLUS       &trans
&trans           &kp SLASH    &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp LEFT_BRACKET                                         &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp BACKSLASH  &trans
&trans           &kp TILDE    &kp GRAVE      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES  &kp EQUAL         &trans  &trans  &trans     &trans      &kp COLON          &kp SEMICOLON    &trans                 &kp QUESTION      &kp PIPE       &trans
                                             &trans                &trans             &trans            &trans  &trans  &kp LC(A)  &kp RETURN  &kp SPACE          &trans           &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans          &trans     &trans        &trans     &trans                                         &trans          &trans          &trans        &trans           &trans  &trans
&trans  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LCMD   &kp LG(GRAVE)                                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &kp LG(Z)       &kp LG(X)  &kp LG(C)     &kp LG(V)  &trans         &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
                                   &trans        &trans     &trans         &trans  &trans  &trans  &trans  &trans          &trans          &trans
            >;
        };

        numbers_media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                     &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                     &trans        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &kp LC(A)  &kp NUMBER_0  &kp NUMBER_0  &trans
            >;
        };
    };
};
